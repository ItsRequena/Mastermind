package mastermind.Interfaz;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.TextArea;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.DEFAULT_OPTION;
import mastermind.*;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList; 
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import mastermind.Input;


public class InterfazMastermind extends javax.swing.JFrame {
    Almacen storage = new Almacen();
    Usuario user;
    
    Output salida= new Output();
    FondoPanel fondo= new FondoPanel();
    
    public InterfazMastermind() throws IOException, ClassNotFoundException {
        initComponents();
        this.setLocationRelativeTo(null);
    
        try{
            Input entrada = new Input();
            entrada.abrirAlmacen("lista.bin"); 
            storage =entrada.leerAlmacen();
            entrada.cerrarAlmacen();
        }catch (IOException ex) {
           // Logger.getLogger(InterfazMastermind.class.getName()).log(Level.SEVERE, null, ex);
           JOptionPane.showMessageDialog(null,"\nNo se encontró el fichero");
           
        }
        
        catch (ClassNotFoundException ex) {
           // Logger.getLogger(InterfazMastermind.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"\nNo se encontró el fichero");
        }
        catch (NullPointerException ex){
            
        }
        
        
        

    }
    public Almacen getAlmacen(){
    
        return storage;
    }
    public void setAlmacen(Almacen st){
        this.storage=st;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        fileChooser = new javax.swing.JFileChooser();
        jPanel1 = new FondoPanel();
        jButtonSalir = new javax.swing.JButton();
        jConstaseña = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jRegistrar = new javax.swing.JButton();
        jUsuario = new javax.swing.JLabel();
        jIniciarSesion = new javax.swing.JButton();
        jTextUsuario = new javax.swing.JTextField();
        jPassword = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        fileChooser.setDialogTitle("Seleccione el fichero que desea cargar");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jButtonSalir.setBackground(new java.awt.Color(0, 0, 0));
        jButtonSalir.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jConstaseña.setForeground(new java.awt.Color(255, 255, 255));
        jConstaseña.setText("Constraseña:");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Registrate ahora!");

        jRegistrar.setBackground(new java.awt.Color(0, 0, 0));
        jRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        jRegistrar.setText("Registrar");
        jRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRegistrarActionPerformed(evt);
            }
        });

        jUsuario.setForeground(new java.awt.Color(255, 255, 255));
        jUsuario.setText("Usuario:");

        jIniciarSesion.setBackground(new java.awt.Color(0, 0, 0));
        jIniciarSesion.setForeground(new java.awt.Color(255, 255, 255));
        jIniciarSesion.setText("Iniciar Sesion");
        jIniciarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jIniciarSesionActionPerformed(evt);
            }
        });

        jTextUsuario.setBackground(new java.awt.Color(153, 153, 153));
        jTextUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextUsuarioActionPerformed(evt);
            }
        });

        jPassword.setBackground(new java.awt.Color(153, 153, 153));
        jPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordActionPerformed(evt);
            }
        });

        jButton1.setText("Cargar partida");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(276, 276, 276)
                .addComponent(jIniciarSesion))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jRegistrar))
                .addGap(449, 449, 449)
                .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(160, 160, 160)
                    .addComponent(jConstaseña)
                    .addGap(6, 6, 6)
                    .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jButton1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jUsuario)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jTextUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(102, 102, 102)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jConstaseña, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jIniciarSesion)
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(6, 6, 6)
                        .addComponent(jRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRegistrarActionPerformed
        try { RegistrarUsuario registrar = new RegistrarUsuario();
        if(JOptionPane.showConfirmDialog(this,registrar,"Registrar",JOptionPane.OK_CANCEL_OPTION,JOptionPane.PLAIN_MESSAGE)
            == JOptionPane.OK_OPTION){
            Usuario player1= new Usuario(registrar.getUsuario(),registrar.getContraseña());
            if (storage.ExisteNombreClave(player1)== false){
                    if (registrar.getUsuario().isEmpty() || registrar.getContraseña().isEmpty()) {
                        JOptionPane.showMessageDialog(this, "No se puede registrar el usuario");
                    }else{
                        try{
                            storage.Registrar(player1);
                            salida.abrirAlmacen("lista.bin");
                            salida.escribirAlmacen(storage);
                            salida.cerrarAlmacen();
                            JOptionPane.showMessageDialog(this, "Usuario registrado correctamente");
                        }catch (IOException ex) {
                            Logger.getLogger(InterfazMastermind.class.getName()).log(Level.SEVERE, null, ex);
                        }
                }
            }else{
                JOptionPane.showMessageDialog(this,"El usuario ya esta registrado");
            }
        }
        }catch (IOException ex){
            Logger.getLogger(InterfazMastermind.class.getName()).log(Level.SEVERE, null, ex);
        }catch (ClassNotFoundException ex){
            Logger.getLogger(InterfazMastermind.class.getName()).log(Level.SEVERE, null, ex);
                }
        
    }//GEN-LAST:event_jRegistrarActionPerformed

    private void jIniciarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jIniciarSesionActionPerformed
        Usuario player2 = new Usuario(getUsuario(),getContraseña());
        if (storage.ExisteUsuario(player2)== true){
            user = storage.IdentificarUsuario(player2);
            boolean menuAdmin=false;
            if(user.administrador)
            menuAdmin=true;
            if(menuAdmin==false){
                try {
                    MenuUsuario usuario = new MenuUsuario(storage,user);
                    JOptionPane.showConfirmDialog(this,usuario,"Menu Usuario",JOptionPane.DEFAULT_OPTION,JOptionPane.PLAIN_MESSAGE);
                } catch (IOException ex) {
                    Logger.getLogger(InterfazMastermind.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(InterfazMastermind.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                try {
                    MenuAdmin menuAd = new MenuAdmin(storage,user);
                    JOptionPane.showConfirmDialog(this,menuAd,"Menu Administrador",JOptionPane.DEFAULT_OPTION,JOptionPane.PLAIN_MESSAGE);
                    //if (menuAd.confirmacion=1){
                        //storage.Registrar(adminNuevo);

                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(InterfazMastermind.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                    Logger.getLogger(InterfazMastermind.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
            }else{
                JOptionPane.showMessageDialog(this, "Usuario no registrado, registrese primero");
            }
    }//GEN-LAST:event_jIniciarSesionActionPerformed

    private void jPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordActionPerformed

    }//GEN-LAST:event_jPasswordActionPerformed

    private void jTextUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextUsuarioActionPerformed

    }//GEN-LAST:event_jTextUsuarioActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        try {
            salida.abrirAlmacen("lista.bin");
            salida.escribirAlmacen(storage);
            salida.cerrarAlmacen();
            System.exit(0);
        } catch (IOException ex) {
            Logger.getLogger(InterfazMastermind.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                //String cargar_partida=JOptionPane.showInputDialog("Introduce el nombre de la partida que desees cargar") ;
                Input entrada = new Input();
                entrada.abrirAlmacenPrima(file);
                storage =entrada.leerAlmacen();
                entrada.cerrarAlmacen();
            } catch (IOException ex) {
               // Logger.getLogger(InterfazMastermind.class.getName()).log(Level.SEVERE, null, ex);
               JOptionPane.showMessageDialog(null,"\nNo se encontró un fichero con ese nombre");
            }

            catch (ClassNotFoundException ex) {
                Logger.getLogger(InterfazMastermind.class.getName()).log(Level.SEVERE, null, ex);
            }
            catch (NullPointerException ex){

            }
        }
        else
            JOptionPane.showMessageDialog(null,"\nCancelado por el usuario");
    }//GEN-LAST:event_jButton1ActionPerformed

     public String getUsuario () {
        return jTextUsuario.getText();
    }
    
    public String getContraseña () {
        return jPassword.getText();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazMastermind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazMastermind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazMastermind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazMastermind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new InterfazMastermind().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(InterfazMastermind.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(InterfazMastermind.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JLabel jConstaseña;
    private javax.swing.JButton jIniciarSesion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPassword;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JButton jRegistrar;
    private javax.swing.JTextField jTextUsuario;
    private javax.swing.JLabel jUsuario;
    // End of variables declaration//GEN-END:variables
//fondo de pantalla
    class FondoPanel extends JPanel{
        private Image imagen;
        
        @Override
        public void paint (Graphics g){
            imagen = new ImageIcon(getClass().getResource("/Imagenes/mastermind-game.jpg")).getImage();
            g.drawImage(imagen,0, 0, getWidth(), getHeight(),this);
            setOpaque(false);
            super.paint(g);
        }
    }


}
